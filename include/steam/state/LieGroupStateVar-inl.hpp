//////////////////////////////////////////////////////////////////////////////////////////////
/// \file LieGroupStateVar-inl.hpp
///
/// \author Sean Anderson, ASRL
//////////////////////////////////////////////////////////////////////////////////////////////

#include <steam/state/LieGroupStateVar.hpp>

namespace steam {

/////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Default constructor
/////////////////////////////////////////////////////////////////////////////////////////////
template<typename TYPE, int DIM>
LieGroupStateVar<TYPE,DIM>::LieGroupStateVar() : StateVariable<TYPE>(DIM) {
}

/////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Construct from an instance of the value type
/////////////////////////////////////////////////////////////////////////////////////////////
template<typename TYPE, int DIM>
LieGroupStateVar<TYPE,DIM>::LieGroupStateVar(const TYPE& t) : StateVariable<TYPE>(t, DIM) {
}

/////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Construct from a vector (through some exponential map)
/////////////////////////////////////////////////////////////////////////////////////////////
template<typename TYPE, int DIM>
LieGroupStateVar<TYPE,DIM>::LieGroupStateVar(const Eigen::Matrix<double,DIM,1>& v) : StateVariable<TYPE>(TYPE(v), DIM) {
}

/////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Update the lie group state variable via a left-hand multiplicative perturbation:
///          this = TYPE(perturbation) * this
/////////////////////////////////////////////////////////////////////////////////////////////
template<typename TYPE, int DIM>
bool LieGroupStateVar<TYPE,DIM>::update(const Eigen::VectorXd& perturbation) {

  if (perturbation.size() != this->getPerturbDim()) {
    throw std::runtime_error("During attempt to update a state variable, the provided "
                             "perturbation (VectorXd) was not the correct size.");
  }

  // Update the Lie matrix using a left-multiplicative perturbation
  this->value_ = TYPE(perturbation)*this->value_;
  return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Clone method
/////////////////////////////////////////////////////////////////////////////////////////////
template<typename TYPE, int DIM>
StateVariableBase::Ptr LieGroupStateVar<TYPE,DIM>::clone() const {
  return LieGroupStateVar<TYPE,DIM>::Ptr(new LieGroupStateVar<TYPE,DIM>(*this));
}

} // steam
