//////////////////////////////////////////////////////////////////////////////////////////////
/// \file Jacobian.hpp
///
/// \author Sean Anderson, ASRL
//////////////////////////////////////////////////////////////////////////////////////////////

#ifndef STEAM_JACOBIAN_HPP
#define STEAM_JACOBIAN_HPP

#include <Eigen/Dense>
#include <steam/state/StateVariableBase.hpp>

namespace steam {

//////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Simple structure to hold Jacobian information
//////////////////////////////////////////////////////////////////////////////////////////////
struct Jacobian
{

  //////////////////////////////////////////////////////////////////////////////////////////////
  /// \brief Default constructor
  //////////////////////////////////////////////////////////////////////////////////////////////
  Jacobian() {}

  //////////////////////////////////////////////////////////////////////////////////////////////
  /// \brief Constructor
  //////////////////////////////////////////////////////////////////////////////////////////////
  Jacobian(const StateKey& key, const Eigen::MatrixXd& jac) : key(key), jac(jac) {
  }

  //////////////////////////////////////////////////////////////////////////////////////////////
  /// \brief Key of the associated state variable
  //////////////////////////////////////////////////////////////////////////////////////////////
  StateKey key;

  //////////////////////////////////////////////////////////////////////////////////////////////
  /// \brief Jacobian matrix
  //////////////////////////////////////////////////////////////////////////////////////////////
  Eigen::MatrixXd jac;

};

} // steam

#endif // STEAM_JACOBIAN_HPP
